// Misc
00 00 boot
00 01 init
00 02 idle

00 f1 main
00 f2 mission
00 f3 fsm state
00 f4 mission stage

// Misc globals
g00_01 put                  function
g00_02 get                  remote path, [local path]
g00_03 hlog

// Pre-launch
01 01 system self-check
01 02 warp-to-lan           lan
01 03 verify eta-to-lan     lan, cb if true
01 04 terminal count
01 05 ignition
01 06 wait for deployment

// Launch
02 01 unguided ascent
02 02 gravity turn          inclination, pitch rate
02 03 track prograde        periapsis
02 04 horizontal flight     periapsis, inclination
02 05 coast
02 06 periapsis boost       periapsis
02 07 stage
02 08 inclination adj.      periapsis, inclination

// Launch globals
g02_01 pitch timer          seconds
g02_02 launch azimuth
g02_03 horizontal heading   

// Orbital Manouevres
03 01 execute manoeuvre     next, [warp]
03 02 apo height adjustment height
03 03 peri height adjustment
                            height
03 04 circularize at apo
03 05 circularize at peri
03 06 inclination change    inclination, longitude of ascending node
03 07 ensure stable orbit
03 08 adj arg of peri       height, aop
03 09 equitorial orbit
03 0a transfer to peer      peer, phase angle
03 0b fine-adjust SMA       SMA

// Transfer Manoeuvres
04 01 transfer to body      body
04 02 transfer correction   body
04 03 mid-course correction body, apoapsis, inclination, err()
04 04 coast to SOI          body, [warp]
04 05 capture inclination adjustment
04 06 capture burn
04 07 impact mid-course correction
                            body, err()

// Landing Manoeuvres
05 01 deorbit
05 02 Untargeted hoverslam

// Science stuff
06 01 record science        [xmit], [only rerunnable]
06 02 run scanners

// Mission Commands
07 00 (nop) no-op           params (idl)
07 01 (lch) launch          params (prt [pitch rate], per [peer], phs [phase], rpa [raise peri], obt: {inc, lan, sma, ecc})
07 02 (stg) stage
07 03 (atv) wait until active

07 21 (om1) circ @ apo      params (idl)
07 22 (om2) stabilize orbit params (idl)
07 23 (om3) co-planar orbit change
                            params (idl, obt: {bdy, ecc, sma, aop})
07 24 (om4) non-planar orbit change
                            params (idl, obt: {bdy, inc, ecc, sma, lan, aop})

07 41 (tm1) initial transfer burn
                            params (idl, obt: {bdy, inc, sma})
07 42 (tm2) transfer to orbit
                            params (idl, obt: {bdy, inc, sma})
07 43 (tm3) transfer to impact
                            params (idl, obt: {bdy})

// Library subroutines
fd 01 fnapply               function, List(arguments).
fd 02 countdown             message, count
fd 03 ETA to LAN            longitude of ascending node
fd 04 clamp                 x, minimum value, maximum value
fd 05 compass for vec       orbitable, velocity
fd 06 launch heading        inclination
fd 07 finite state machine  function(seq,ev,next)
fd 08 mission
fd 09 fsm program           seq, next, program, [args], [idle]
fd 0a burn time             dV
fd 0b kill warp             
fd 0c execute manoeuvre     [warp]
fd 0d orbital velocity      orbit, height, [semi-major axis]
fd 0e hohmann dV            time, height, [orbitable]
fd 0f hill climb/multi-constraint optimization
fd 10 clear nodes
fd 11 list to node          list
fd 12 node to list          node
fd 13 find node             solve(X, steps, map()), start node, steps
fd 14 golden section search
                            a, b, e, f
fd 15 transfers to          orbit, body
fd 16 transfer orbit        orbit, body
fd 17 closest approach      body, [epsilon]
fd 18 map                   list, f
fd 19 get value             dict, key, default
fd 1a altitude at           time
fd 1b transfer eta          orbit, body
fd 1c transfer map          
fd 1d inclination dv        angle, [velocity1], [velocity2]
fd 1e steer to direction
fd 1f azimuth               inclination, [ship]
fd 20 pitch for vec         [ship], [vec]
fd 21 reset fsm (fd 07)
fd 22 save serializable     filename, value
fd 23 read serializable     filename, default value
fd 24 save non-serializable filename, value
fd 25 read non-serializable filename, default value
fd 26 orbit to lex          orbit
fd 27 fsm program 2         seq, next, program@, [args], [idle]

// Boot Scripts
fe 00 console
fe 01 lifter
fe 02 satellite
fe 03 orbital mission
fe 04 untargeted direct-descent
fe 05 unified boot
fe fe staging test
fe ff science test

// Remote commands
ff 01 patch                 vessel name, patch src, [patch dest]
ff 02 record science        vessel name, [transmit]
ff 03 reset fsm             vessel name
ff 04 send cmd              vessel name, command, [List(args)]
